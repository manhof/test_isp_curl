# Hello Welcome to the curl modification script. Here you enter all the parameters which will be passed to the curl file. An explination is shown below:

[Section 1]
#URL to test
#This section shows the number of urls to test The larger number of urls that you test, the longer the script will take to run. the default value is 1.
url_number: 20


#URLS
#This section takes the parameters of the urls for the system test. For example if you want to test 10 urls then you will need to add urls for all 10 urls otherwise the tests will fail. (start at 0 and go to 9)

url1: www.google.com
url2: www.espn.com
url3: www.twitter.com
url4: www.imgur.com
url5: www.spotify.com
url6: www.pandora.com
url7: www.netflix.com
url8: www.yahoo.com
url9: www.akamai.com
url10: www.hulu.com
url11: www.instagram.com
url12: www.vine.com
url13: www.linkedin.com
url14: www.cnn.com
url15: www.itunes.com
url16: www.weather.com
url17: https://www.google.com
url18: https://gizmodo.com
url19: https://www.amazon.com
url20: https://www.yahoo.com

#User Agent 
#this section takes the input for the user agents that will be tested; for a list of user agent strings go to https://udger.com/resources/ua-list. The default is for chrome mobile user agent string

#user_agent_string: "Mozilla/5.0 (Linux; U; Android-4.0.3; en-us; Galaxy Nexus Build/IML74K) AppleWebKit/535.7 (KHTML, like Gecko) CrMo/16.0.912.75 Mobile Safari/535.7"
user_agent_string: "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.75 Safari/537.36"

#Number of tests per second
#This section defines the time between each test run in seconds. As a note during a trial run it took about 1.3 seconds to load espn.com. If you set the time between the start of tests to quick then you run into a potential runaway resourse issue. It is recommended that this value not be set to anything less than 5 seconds. If your are download a large file you should adjust accordingly.

seconds_per_test:8

[Section 2]

#in this section you will enter the location of where you want the curl shell script to be run from and the file name. the default filename is in /usr/local/bin/isp_curl_script.sh

big_curl_script_location: /usr/local/bin/isp_curl_script.sh

#This section is where the default location where the curl script that runs the test. The default is in /usr/local/bin/curl2.sh

curl_script_location: /usr/local/bin/curl2.sh

#This is the section where you put the location for the csv file. the default location is /tmp/curl.csv

curl_csv_output: /tmp/curl/curl.csv

[Section 3] 

# This is the section which determines how often to run the curl script. the time is in minutes and defaults to 1.
curl_script_frequency: 1

#user to run cron jobs
cron_user: admin

[Section 4]
#This section is for the local database and the charaterstics that are required to locally store the data. if a database change is required locally please note the information here.

local_database_un: curluser
local_database_password: password
local_database_url_ip: 127.0.0.1
local_database_name: curl
local_table_name: curl_data


#this section deterimines the frequency to store data in the local database. the Default is to run once every 5 minutes

local_db_file_location: /usr/local/bin/totalupdate.py
local_db_update: 2


[Section 5]
#Backend Database Service
#below is the login information for the backend database connections to the server. You will need to provide the username, password, ip/url of the backend system, database, and table name. If the information is left blank the server will default to only using a local database.

remote_db_csv_location: /tmp/curl2.csv
phone_number: 9088014752
remote_upload_file_location: /usr/local/bin/remote_database_upload.py

remote_database_un: curluser
remote_database_password: password
remote_database_url_ip: 192.168.100.233
remote_database_name: curl
remote_table_name: curl_data

#this section deterimines the frequency to store data in the local database. the Default is to run once every 15 minutes
remote_db_update: 5


[Section 6]
#this will show the expected file size of the DB rows per test
db_per_test_instance: 0.00005
#Max local db file size in GB
local_db_max: 4
local_db_delete_file_location: /usr/local/bin/local_db_delete.py


